{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/Practice/storify/ReactJS/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSendMessageIsOpen } from \"./features/mailSlice\";\nimport { selectUser } from \"./features/userSlice\";\nimport { userData, displayEmails, sentEmailFetchedDone, APIUserData } from \"./features/dataSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const [emailListIDs, setEmailListIDs] = useState([]);\n  const [emailGathered, setEmailGathered] = useState([]);\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n  const ListRecord = useSelector(APIUserData);\n  const singleDisplay = ListRecord.displaySingleMessage;\n  useEffect(() => {\n    dispatch(sentEmailFetchedDone(sentEmailFetched));\n  }, [sentEmailFetched]);\n  useEffect(() => {\n    if (user) {\n      InboxIDs(user).get(`/${user.user_id}/messages?labelIds=SENT`).then(function (response) {\n        response.data.messages.map(async item => {\n          await InboxIDs(user).get(`/${user.user_id}/messages/${item.id}`).then(res => {\n            setSentEmailFetched(sentEmailFetched => [...sentEmailFetched, res.data]);\n          }).catch(error => {\n            console.error(error);\n          });\n        });\n      }, function (err) {\n        console.error(\"Execute error\", err);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (user) {\n      InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=3&q=category%3Aprimary`).then(res => {\n        dispatch(userData(res.data));\n        setEmailListIDs(res.data.messages);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (emailListIDs.length > 0) {\n      emailListIDs.map(Emailid => InboxIDs(user).get(`/${user.user_id}/messages/${Emailid.id}`).then(res => {\n        const setting = res.data;\n        setEmailGathered(emailGathered => [...emailGathered, setting]);\n      }).catch(error => {\n        console.error(error);\n      }));\n      return () => {};\n    }\n  }, [emailListIDs]);\n  useEffect(() => {\n    dispatch(displayEmails({\n      emailGathered\n    }));\n  }, [emailGathered]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: !user ? /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Yna4mwtiJUoKlTWk50AavEU0utw=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","useSelector","useDispatch","selectSendMessageIsOpen","selectUser","userData","displayEmails","sentEmailFetchedDone","APIUserData","App","user","dispatch","sendMessageIsOpen","emailListIDs","setEmailListIDs","emailGathered","setEmailGathered","sentEmailFetched","setSentEmailFetched","ListRecord","singleDisplay","displaySingleMessage","InboxIDs","get","user_id","then","response","data","messages","map","item","id","res","catch","error","console","err","length","Emailid","setting"],"sources":["/home/sohaib/Desktop/Practice/storify/ReactJS/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSendMessageIsOpen } from \"./features/mailSlice\";\nimport { selectUser } from \"./features/userSlice\";\nimport {\n  userData,\n  displayEmails,\n  sentEmailFetchedDone,\n  APIUserData,\n} from \"./features/dataSlice\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n\n  const [emailListIDs, setEmailListIDs] = useState([]);\n  const [emailGathered, setEmailGathered] = useState([]);\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n\n  const ListRecord = useSelector(APIUserData);\n  const singleDisplay = ListRecord.displaySingleMessage;\n\n  useEffect(() => {\n    dispatch(sentEmailFetchedDone(sentEmailFetched));\n  }, [sentEmailFetched]);\n\n  useEffect(() => {\n    if (user) {\n      InboxIDs(user)\n        .get(`/${user.user_id}/messages?labelIds=SENT`)\n\n        .then(\n          function (response) {\n            response.data.messages.map(async (item) => {\n              await InboxIDs(user)\n                .get(`/${user.user_id}/messages/${item.id}`)\n                .then((res) => {\n                  setSentEmailFetched((sentEmailFetched) => [\n                    ...sentEmailFetched,\n                    res.data,\n                  ]);\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            });\n          },\n          function (err) {\n            console.error(\"Execute error\", err);\n          }\n        );\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      InboxIDs(user)\n        .get(\n          `/${user.user_id}/messages?labelIds=INBOX&maxResults=3&q=category%3Aprimary`\n        )\n        .then((res) => {\n          dispatch(userData(res.data));\n          setEmailListIDs(res.data.messages);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (emailListIDs.length > 0) {\n      emailListIDs.map((Emailid) =>\n        InboxIDs(user)\n          .get(`/${user.user_id}/messages/${Emailid.id}`)\n          .then((res) => {\n            const setting = res.data;\n            setEmailGathered((emailGathered) => [...emailGathered, setting]);\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n      );\n\n      return () => {};\n    }\n  }, [emailListIDs]);\n  useEffect(() => {\n    dispatch(displayEmails({ emailGathered }));\n  }, [emailGathered]);\n  return (\n    <Router>\n      {!user ? (\n        <SignUp />\n      ) : (\n        <div className=\"app\">\n          <Switch>\n            <Route path=\"/\" exact></Route>\n          </Switch>\n        </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}