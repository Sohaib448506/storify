{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SendMail/SendMail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./SendMail.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeSendMessage } from \"../../features/mailSlice\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SendMail() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const dispatch = useDispatch();\n  const [imageEncode, setImageEncoded] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n\n  function sendMessage(headers_obj, message) {\n    const path = \"upload/gmail/v1/users/me/messages/send\";\n    var pngData = imageEncode;\n    var mail = ['Content-Type: multipart/mixed; boundary=\"foo_bar_baz\"\\r\\n', \"MIME-Version: 1.0\\r\\n\", `To:${headers_obj.To}\\r\\n`, `Subject: ${headers_obj.Subject}\\r\\n\\r\\n`, \"--foo_bar_baz\\r\\n\", 'Content-Type: text/plain; charset=\"UTF-8\"\\r\\n', \"MIME-Version: 1.0\\r\\n\", \"Content-Transfer-Encoding: 7bit\\r\\n\\r\\n\", `${message}\\r\\n\\r\\n`, \"--foo_bar_baz\\r\\n\", \"Content-Type: image/png\\r\\n\", \"MIME-Version: 1.0\\r\\n\", \"Content-Transfer-Encoding: base64\\r\\n\", `Content-Disposition: attachment; filename=\"${fileName}\" \\r\\n\\r\\n`, pngData, \"\\r\\n\\r\\n\", \"--foo_bar_baz--\"].join(\"\");\n    window.gapi.client.request({\n      path: path,\n      headers: {\n        \"Content-Type\": \"message/rfc822\"\n      },\n      method: \"POST\",\n      body: mail\n    }).then(() => {\n      alert(\"Email has been sent successfully\");\n    }).catch(err => {\n      console.log(\"Error:\", err);\n    });\n  }\n\n  const onSubmit = formData => {\n    const headers_obj = {\n      To: formData.to,\n      Subject: formData.subject\n    };\n    const message = formData.message;\n    sendMessage(headers_obj, message);\n    dispatch(closeSendMessage());\n  }; //for attachments\n\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const uploadImage = async event => {\n    if (event.target.files.length > 0) {\n      setFileName(event.target.files[0].name);\n      const file = event.target.files[0];\n      const base64 = await convertBase64(file);\n      setImageEncoded(base64.split(\",\")[1]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sendMail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendMail-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: () => dispatch(closeSendMessage()),\n        className: \"sendMail-close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"to\",\n        placeholder: \"To\",\n        type: \"email\",\n        ...register(\"to\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), errors.to && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sendMail-error\",\n        children: \"To is Required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"subject\",\n        placeholder: \"Subject\",\n        type: \"text\",\n        ...register(\"subject\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sendMail-error\",\n        children: \"Subject is Required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        placeholder: \"Message\",\n        type: \"text\",\n        className: \"sendMail-message\",\n        ...register(\"message\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sendMail-error\",\n        children: \"Message is Required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"selectImage\",\n        type: \"file\",\n        onChange: e => {\n          uploadImage(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendMail-options\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"sendMail-send\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendMail, \"knJYUWBNI2SwWfHWkW1cbZuMmvg=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = SendMail;\nexport default SendMail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMail\");","map":{"version":3,"names":["React","useState","CloseIcon","Button","useForm","useDispatch","closeSendMessage","useSelector","selectUser","axios","SendMail","register","handleSubmit","formState","errors","dispatch","imageEncode","setImageEncoded","fileName","setFileName","sendMessage","headers_obj","message","path","pngData","mail","To","Subject","join","window","gapi","client","request","headers","method","body","then","alert","catch","err","console","log","onSubmit","formData","to","subject","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","uploadImage","event","target","files","length","name","base64","split","required","e"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SendMail/SendMail.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./SendMail.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeSendMessage } from \"../../features/mailSlice\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport axios from \"axios\";\n\nfunction SendMail() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const [imageEncode, setImageEncoded] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n  function sendMessage(headers_obj, message) {\n    const path = \"upload/gmail/v1/users/me/messages/send\";\n    var pngData = imageEncode;\n    var mail = [\n      'Content-Type: multipart/mixed; boundary=\"foo_bar_baz\"\\r\\n',\n      \"MIME-Version: 1.0\\r\\n\",\n      `To:${headers_obj.To}\\r\\n`,\n      `Subject: ${headers_obj.Subject}\\r\\n\\r\\n`,\n\n      \"--foo_bar_baz\\r\\n\",\n      'Content-Type: text/plain; charset=\"UTF-8\"\\r\\n',\n      \"MIME-Version: 1.0\\r\\n\",\n      \"Content-Transfer-Encoding: 7bit\\r\\n\\r\\n\",\n\n      `${message}\\r\\n\\r\\n`,\n\n      \"--foo_bar_baz\\r\\n\",\n      \"Content-Type: image/png\\r\\n\",\n      \"MIME-Version: 1.0\\r\\n\",\n      \"Content-Transfer-Encoding: base64\\r\\n\",\n      `Content-Disposition: attachment; filename=\"${fileName}\" \\r\\n\\r\\n`,\n\n      pngData,\n      \"\\r\\n\\r\\n\",\n\n      \"--foo_bar_baz--\",\n    ].join(\"\");\n\n    window.gapi.client\n      .request({\n        path: path,\n        headers: { \"Content-Type\": \"message/rfc822\" },\n        method: \"POST\",\n        body: mail,\n      })\n      .then(() => {\n        alert(\"Email has been sent successfully\");\n      })\n      .catch((err) => {\n        console.log(\"Error:\", err);\n      });\n  }\n  const onSubmit = (formData) => {\n    const headers_obj = {\n      To: formData.to,\n      Subject: formData.subject,\n    };\n    const message = formData.message;\n    sendMessage(headers_obj, message);\n\n    dispatch(closeSendMessage());\n  };\n  //for attachments\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  const uploadImage = async (event) => {\n    if (event.target.files.length > 0) {\n      setFileName(event.target.files[0].name);\n      const file = event.target.files[0];\n\n      const base64 = await convertBase64(file);\n\n      setImageEncoded(base64.split(\",\")[1]);\n    }\n  };\n\n  return (\n    <div className=\"sendMail\">\n      <div className=\"sendMail-header\">\n        <h3>New Message</h3>\n        <CloseIcon\n          onClick={() => dispatch(closeSendMessage())}\n          className=\"sendMail-close\"\n        />\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          name=\"to\"\n          placeholder=\"To\"\n          type=\"email\"\n          {...register(\"to\", { required: true })}\n        />\n        {errors.to && <p className=\"sendMail-error\">To is Required!</p>}\n        <input\n          name=\"subject\"\n          placeholder=\"Subject\"\n          type=\"text\"\n          {...register(\"subject\", { required: true })}\n        />\n        {errors.subject && (\n          <p className=\"sendMail-error\">Subject is Required!</p>\n        )}\n        <input\n          name=\"message\"\n          placeholder=\"Message\"\n          type=\"text\"\n          className=\"sendMail-message\"\n          {...register(\"message\", { required: true })}\n        />\n        {errors.message && (\n          <p className=\"sendMail-error\">Message is Required!</p>\n        )}\n        {/* For Uploading documents */}\n        <input\n          id=\"selectImage\"\n          type=\"file\"\n          onChange={(e) => {\n            uploadImage(e);\n          }}\n        />\n        <div className=\"sendMail-options\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"sendMail-send\"\n          >\n            Send\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SendMail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}