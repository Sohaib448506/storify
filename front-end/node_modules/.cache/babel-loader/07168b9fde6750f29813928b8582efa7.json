{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SentEmails/SentEmails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport InboxIDs from \"../api/InboxList\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { sentEmailFetchedDone, APIUserData } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parseMessage from \"gmail-api-parse-message\";\nimport SingleEmailDisplaySent from \"./SingleEmailDisplaySent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SentEmails = () => {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [sentEmail, SetSentEmail] = useState([]);\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n  const dispatch = useDispatch();\n  const sentEmailsToDisplay = useSelector(APIUserData);\n  console.log(\"checking Rendering\", sentEmailsToDisplay.sentEmailFetchedDone);\n  useEffect(() => {\n    if (sentEmailFetched.length > 0) {\n      sentEmailFetched.map(item => {\n        var parsedMessage = parseMessage(item);\n        const condition = sentEmail.find(array => array.id === item.id);\n\n        if (condition === undefined) {\n          return sentEmail;\n        }\n\n        const arr = {\n          id: parsedMessage.id,\n          to: parsedMessage.headers.to,\n          subject: parsedMessage.headers.subject,\n          description: parsedMessage.snippet,\n          timestamp: parsedMessage.headers.date\n        };\n        SetSentEmail(sentEmail => [...sentEmail, arr]);\n      });\n    }\n\n    dispatch(sentEmailFetchedDone(sentEmail));\n  }, [sentEmailFetched]);\n  useEffect(() => {\n    InboxIDs(user).get(`/${user.user_id}/messages?labelIds=SENT`).then(function (response) {\n      response.data.messages.map(async item => {\n        await InboxIDs(user).get(`/${user.user_id}/messages/${item.id}`).then(res => {\n          setSentEmailFetched(sentEmailFetched => [...sentEmailFetched, res.data]);\n        }).catch(error => {\n          console.error(error);\n        });\n      });\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sentEmailsToDisplay.sentEmailFetchedDisplay && sentEmailsToDisplay.sentEmailFetchedDone.map(_ref => {\n      let {\n        id,\n        to,\n        subject,\n        description,\n        timestamp\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(SingleEmailDisplaySent, {\n        id: id,\n        to: to,\n        subject: subject,\n        description: description,\n        timestamp: timestamp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(SentEmails, \"9KBGQ8Sx1/ME45kYDI7UlBjnlzE=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = SentEmails;\nexport default SentEmails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentEmails\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","InboxIDs","selectUser","sentEmailFetchedDone","APIUserData","useSelector","useDispatch","parseMessage","SingleEmailDisplaySent","SentEmails","user","sentEmail","SetSentEmail","sentEmailFetched","setSentEmailFetched","dispatch","sentEmailsToDisplay","console","log","length","map","item","parsedMessage","condition","find","array","id","undefined","arr","to","headers","subject","description","snippet","timestamp","date","get","user_id","then","response","data","messages","res","catch","error","err","sentEmailFetchedDisplay"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SentEmails/SentEmails.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport InboxIDs from \"../api/InboxList\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { sentEmailFetchedDone, APIUserData } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport parseMessage from \"gmail-api-parse-message\";\nimport SingleEmailDisplaySent from \"./SingleEmailDisplaySent\";\nconst SentEmails = () => {\n  const user = useSelector(selectUser);\n  const [sentEmail, SetSentEmail] = useState([]);\n\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n  const dispatch = useDispatch();\n  const sentEmailsToDisplay = useSelector(APIUserData);\n  console.log(\"checking Rendering\", sentEmailsToDisplay.sentEmailFetchedDone);\n  useEffect(() => {\n    if (sentEmailFetched.length > 0) {\n      sentEmailFetched.map((item) => {\n        var parsedMessage = parseMessage(item);\n\n        const condition = sentEmail.find((array) => array.id === item.id);\n        if (condition === undefined) {\n          return sentEmail;\n        }\n\n        const arr = {\n          id: parsedMessage.id,\n          to: parsedMessage.headers.to,\n          subject: parsedMessage.headers.subject,\n          description: parsedMessage.snippet,\n          timestamp: parsedMessage.headers.date,\n        };\n        SetSentEmail((sentEmail) => [...sentEmail, arr]);\n      });\n    }\n    dispatch(sentEmailFetchedDone(sentEmail));\n  }, [sentEmailFetched]);\n\n  useEffect(() => {\n    InboxIDs(user)\n      .get(`/${user.user_id}/messages?labelIds=SENT`)\n\n      .then(\n        function (response) {\n          response.data.messages.map(async (item) => {\n            await InboxIDs(user)\n              .get(`/${user.user_id}/messages/${item.id}`)\n              .then((res) => {\n                setSentEmailFetched((sentEmailFetched) => [\n                  ...sentEmailFetched,\n                  res.data,\n                ]);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          });\n        },\n        function (err) {\n          console.error(\"Execute error\", err);\n        }\n      );\n  }, [user]);\n\n  return (\n    <>\n      {sentEmailsToDisplay.sentEmailFetchedDisplay &&\n        sentEmailsToDisplay.sentEmailFetchedDone.map(\n          ({ id, to, subject, description, timestamp }) => (\n            <SingleEmailDisplaySent\n              id={id}\n              to={to}\n              subject={subject}\n              description={description}\n              timestamp={timestamp}\n            />\n          )\n        )}\n    </>\n  );\n};\n\nexport default SentEmails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}