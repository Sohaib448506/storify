{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SentEmails/SentEmails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport InboxIDs from \"../api/InboxList\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { sentEmailFetchedDone, APIUserData } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport parseMessage from \"gmail-api-parse-message\";\nimport SingleEmailDisplaySent from \"./SingleEmailDisplaySent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SentEmails = () => {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [sentEmail, SetSentEmail] = useState([]);\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n  const dispatch = useDispatch();\n  const sentEmailsToDisplay = useSelector(APIUserData);\n  console.log(\"ðŸš€ ~ file: SentEmails.js ~ line 17 ~ SentEmails ~ sentEmailsToDisplay\", sentEmailsToDisplay);\n  useEffect(() => {\n    if (sentEmailFetched.length > 0) {\n      sentEmailFetched.map(item => {\n        var parsedMessage = parseMessage(item);\n        const condition = sentEmail.find(array => array.id === item.id);\n\n        if (condition) {\n          return;\n        } else {\n          const arr = {\n            id: parsedMessage.id,\n            to: parsedMessage.headers.to,\n            subject: parsedMessage.headers.subject,\n            description: parsedMessage.snippet,\n            timestamp: parsedMessage.headers.date\n          };\n          return SetSentEmail(sentEmail => [...sentEmail, arr]);\n        }\n      });\n    }\n\n    dispatch(sentEmailFetchedDone(sentEmail));\n  }, [sentEmailFetched]);\n  useEffect(() => {\n    InboxIDs(user).get(`/${user.user_id}/messages?labelIds=SENT`).then(function (response) {\n      response.data.messages.map(async item => {\n        await InboxIDs(user).get(`/${user.user_id}/messages/${item.id}`).then(res => {\n          setSentEmailFetched(sentEmailFetched => [...sentEmailFetched, res.data]);\n        }).catch(error => {\n          console.error(error);\n        });\n      });\n    }, function (err) {\n      console.error(\"Execute error\", err);\n    });\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailRow\",\n      children: sentEmailsToDisplay.sentEmailFetchedDone.map(_ref => {\n        let {\n          id,\n          to,\n          subject,\n          description,\n          timestamp\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(SingleEmailDisplaySent, {\n          id: id,\n          to: to,\n          subject: subject,\n          description: description,\n          timestamp: timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SentEmails, \"9KBGQ8Sx1/ME45kYDI7UlBjnlzE=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = SentEmails;\nexport default SentEmails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentEmails\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","InboxIDs","selectUser","sentEmailFetchedDone","APIUserData","useSelector","useDispatch","parseMessage","SingleEmailDisplaySent","SentEmails","user","sentEmail","SetSentEmail","sentEmailFetched","setSentEmailFetched","dispatch","sentEmailsToDisplay","console","log","length","map","item","parsedMessage","condition","find","array","id","arr","to","headers","subject","description","snippet","timestamp","date","get","user_id","then","response","data","messages","res","catch","error","err"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SentEmails/SentEmails.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport InboxIDs from \"../api/InboxList\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { sentEmailFetchedDone, APIUserData } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport parseMessage from \"gmail-api-parse-message\";\nimport SingleEmailDisplaySent from \"./SingleEmailDisplaySent\";\nconst SentEmails = () => {\n  const user = useSelector(selectUser);\n  const [sentEmail, SetSentEmail] = useState([]);\n\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n  const dispatch = useDispatch();\n  const sentEmailsToDisplay = useSelector(APIUserData);\n  console.log(\n    \"ðŸš€ ~ file: SentEmails.js ~ line 17 ~ SentEmails ~ sentEmailsToDisplay\",\n    sentEmailsToDisplay\n  );\n\n  useEffect(() => {\n    if (sentEmailFetched.length > 0) {\n      sentEmailFetched.map((item) => {\n        var parsedMessage = parseMessage(item);\n\n        const condition = sentEmail.find((array) => array.id === item.id);\n        if (condition) {\n          return;\n        } else {\n          const arr = {\n            id: parsedMessage.id,\n            to: parsedMessage.headers.to,\n            subject: parsedMessage.headers.subject,\n            description: parsedMessage.snippet,\n            timestamp: parsedMessage.headers.date,\n          };\n          return SetSentEmail((sentEmail) => [...sentEmail, arr]);\n        }\n      });\n    }\n    dispatch(sentEmailFetchedDone(sentEmail));\n  }, [sentEmailFetched]);\n\n  useEffect(() => {\n    InboxIDs(user)\n      .get(`/${user.user_id}/messages?labelIds=SENT`)\n\n      .then(\n        function (response) {\n          response.data.messages.map(async (item) => {\n            await InboxIDs(user)\n              .get(`/${user.user_id}/messages/${item.id}`)\n              .then((res) => {\n                setSentEmailFetched((sentEmailFetched) => [\n                  ...sentEmailFetched,\n                  res.data,\n                ]);\n              })\n              .catch((error) => {\n                console.error(error);\n              });\n          });\n        },\n        function (err) {\n          console.error(\"Execute error\", err);\n        }\n      );\n  }, [user]);\n\n  return (\n    <div>\n      <div className=\"emailRow\">\n        {sentEmailsToDisplay.sentEmailFetchedDone.map(\n          ({ id, to, subject, description, timestamp }) => (\n            <SingleEmailDisplaySent\n              id={id}\n              to={to}\n              subject={subject}\n              description={description}\n              timestamp={timestamp}\n            />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SentEmails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}