{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/Gmail-Clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Mail from \"./components/Mail/Mail\";\nimport EmailList from \"./components/EmailList/EmailList\";\nimport SendMail from \"./components/SendMail/SendMail\";\nimport { useSelector } from \"react-redux\";\nimport { selectSendMessageIsOpen } from \"./features/mailSlice\";\nimport { selectUser } from \"./features/userSlice\";\nimport Login from \"./components/Login/Login\";\nimport { db } from \"./firebase\";\nimport InboxIDs from \"./components/api/InboxList\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const [emails, setEmails] = useState([]);\n  const [emailListIDs, setEmailListIDs] = useState([]);\n  const [emailGathered, setEmailGathered] = useState([]);\n  const [logic, setlogic] = useState(false);\n  console.log(\"emails\", emails);\n  useEffect(() => {\n    db.collection(\"emails\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setEmails(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n\n    if (user) {\n      InboxIDs(user).get(`/${user.user_id}/messages`).then(res => {\n        setEmailListIDs(res.data.messages);\n        setlogic(true);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [user]);\n  useMemo(() => {\n    if (emailListIDs.length > 0) {\n      emailListIDs.map(Emailid => InboxIDs(user).get(`/${user.user_id}/messages/${Emailid.id}`).then(res => {\n        setEmailGathered(...emailGathered, res.data);\n      }).catch(error => {\n        console.error(error);\n      }));\n    }\n  }, [logic]); // Make sure the client is loaded and sign-in is complete before calling this method.\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: !user ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-body\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          emails: emails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/mail\",\n            children: /*#__PURE__*/_jsxDEV(Mail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(EmailList, {\n              emails: emails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), sendMessageIsOpen && /*#__PURE__*/_jsxDEV(SendMail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"18QfJxG+XXHOKFi/Swa1vbc07hE=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","Header","Sidebar","BrowserRouter","Router","Switch","Route","Mail","EmailList","SendMail","useSelector","selectSendMessageIsOpen","selectUser","Login","db","InboxIDs","axios","App","sendMessageIsOpen","user","emails","setEmails","emailListIDs","setEmailListIDs","emailGathered","setEmailGathered","logic","setlogic","console","log","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","get","user_id","then","res","messages","catch","error","length","Emailid"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/Gmail-Clone/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Mail from \"./components/Mail/Mail\";\nimport EmailList from \"./components/EmailList/EmailList\";\nimport SendMail from \"./components/SendMail/SendMail\";\nimport { useSelector } from \"react-redux\";\nimport { selectSendMessageIsOpen } from \"./features/mailSlice\";\nimport { selectUser } from \"./features/userSlice\";\nimport Login from \"./components/Login/Login\";\nimport { db } from \"./firebase\";\nimport InboxIDs from \"./components/api/InboxList\";\nimport axios from \"axios\";\nfunction App() {\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n\n  const [emails, setEmails] = useState([]);\n  const [emailListIDs, setEmailListIDs] = useState([]);\n  const [emailGathered, setEmailGathered] = useState([]);\n  const [logic, setlogic] = useState(false);\n\n  console.log(\"emails\", emails);\n  useEffect(() => {\n    db.collection(\"emails\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setEmails(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n    if (user) {\n      InboxIDs(user)\n        .get(`/${user.user_id}/messages`)\n        .then((res) => {\n          setEmailListIDs(res.data.messages);\n          setlogic(true);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }, [user]);\n  useMemo(() => {\n    if (emailListIDs.length > 0) {\n      emailListIDs.map((Emailid) =>\n        InboxIDs(user)\n          .get(`/${user.user_id}/messages/${Emailid.id}`)\n          .then((res) => {\n            setEmailGathered(...emailGathered, res.data);\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n      );\n    }\n  }, [logic]);\n\n  // Make sure the client is loaded and sign-in is complete before calling this method.\n\n  return (\n    <Router>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app\">\n          <Header />\n          <div className=\"app-body\">\n            <Sidebar emails={emails} />\n            <Switch>\n              <Route path=\"/mail\">\n                <Mail />\n              </Route>\n              <Route path=\"/\" exact>\n                <EmailList emails={emails} />\n              </Route>\n            </Switch>\n          </div>\n\n          {sendMessageIsOpen && <SendMail />}\n        </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}