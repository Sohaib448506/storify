{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SentEmails/SentEmails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport InboxIDs from \"../api/InboxList\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { sentEmailFetchedDone, APIUserData } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport parseMessage from \"gmail-api-parse-message\";\nimport SingleEmailDisplaySent from \"./SingleEmailDisplaySent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SentEmails = () => {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [sentEmail, SetSentEmail] = useState([]);\n  console.log(\"ðŸš€ ~ file: SentEmails.js ~ line 12 ~ SentEmails ~ sentEmail\", sentEmail);\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n  const sentEmailsToDisplay = useSelector(APIUserData);\n  const dependencyArray = sentEmailsToDisplay.sentEmailFetchedDone;\n  useEffect(() => {\n    if (dependencyArray.length > 0) {\n      dependencyArray.map(item => {\n        var parsedMessage = parseMessage(item);\n        const condition = sentEmail.find(array => array.id === item.id);\n\n        if (condition) {\n          return sentEmail;\n        } else {\n          const arr = {\n            id: parsedMessage.id,\n            to: parsedMessage.headers.to,\n            subject: parsedMessage.headers.subject,\n            description: parsedMessage.snippet,\n            timestamp: parsedMessage.headers.date\n          };\n          return SetSentEmail(sentEmail => [...sentEmail, arr]);\n        }\n      });\n    }\n  }, [dependencyArray]); // useEffect(() => {\n  //   dispatch(sentEmailFetchedDone(sentEmail));\n  // }, [sentEmail]);\n  // useEffect(() => {\n  //   if (sentEmailFetched.length > 0) {\n  //     sentEmailFetched.map((item) => {\n  //       var parsedMessage = parseMessage(item);\n  //       const condition = sentEmail.find((array) => array.id === item.id);\n  //       if (condition) {\n  //         return sentEmail;\n  //       } else {\n  //         const arr = {\n  //           id: parsedMessage.id,\n  //           to: parsedMessage.headers.to,\n  //           subject: parsedMessage.headers.subject,\n  //           description: parsedMessage.snippet,\n  //           timestamp: parsedMessage.headers.date,\n  //         };\n  //         SetSentEmail((sentEmail) => [...sentEmail, arr]);\n  //         return;\n  //       }\n  //     });\n  //   }\n  // }, [sentEmailFetched]);\n  // useEffect(() => {\n  //   InboxIDs(user)\n  //     .get(`/${user.user_id}/messages?labelIds=SENT`)\n  //     .then(\n  //       function (response) {\n  //         response.data.messages.map(async (item) => {\n  //           await InboxIDs(user)\n  //             .get(`/${user.user_id}/messages/${item.id}`)\n  //             .then((res) => {\n  //               setSentEmailFetched((sentEmailFetched) => [\n  //                 ...sentEmailFetched,\n  //                 res.data,\n  //               ]);\n  //             })\n  //             .catch((error) => {\n  //               console.error(error);\n  //             });\n  //         });\n  //       },\n  //       function (err) {\n  //         console.error(\"Execute error\", err);\n  //       }\n  //     );\n  // }, [user]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-sections\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        Icon: InboxIcon,\n        title: \"Primary\",\n        color: \"red\",\n        selected: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: PeopleIcon,\n        title: \"Social\",\n        color: \"#1A73E8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: LocalOfferIcon,\n        title: \"Promotions\",\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-list\",\n      children: sentEmailsToDisplay.sentEmailFetchedDisplay && sentEmail.map(_ref => {\n        let {\n          id,\n          to,\n          subject,\n          description,\n          timestamp\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(SingleEmailDisplaySent, {\n          id: id,\n          to: to,\n          subject: subject,\n          description: description,\n          timestamp: timestamp\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SentEmails, \"2YlPWtLsHFeflmUtdW4H4j+CqU8=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = SentEmails;\nexport default SentEmails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentEmails\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","InboxIDs","selectUser","sentEmailFetchedDone","APIUserData","useSelector","useDispatch","ChevronLeftIcon","ChevronRightIcon","KeyboardHideIcon","SettingsIcon","InboxIcon","PeopleIcon","parseMessage","SingleEmailDisplaySent","SentEmails","user","sentEmail","SetSentEmail","console","log","sentEmailFetched","setSentEmailFetched","sentEmailsToDisplay","dependencyArray","length","map","item","parsedMessage","condition","find","array","id","arr","to","headers","subject","description","snippet","timestamp","date","LocalOfferIcon","sentEmailFetchedDisplay"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SentEmails/SentEmails.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport InboxIDs from \"../api/InboxList\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { sentEmailFetchedDone, APIUserData } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport parseMessage from \"gmail-api-parse-message\";\nimport SingleEmailDisplaySent from \"./SingleEmailDisplaySent\";\nconst SentEmails = () => {\n  const user = useSelector(selectUser);\n  const [sentEmail, SetSentEmail] = useState([]);\n  console.log(\n    \"ðŸš€ ~ file: SentEmails.js ~ line 12 ~ SentEmails ~ sentEmail\",\n    sentEmail\n  );\n\n  const [sentEmailFetched, setSentEmailFetched] = useState([]);\n\n  const sentEmailsToDisplay = useSelector(APIUserData);\n  const dependencyArray = sentEmailsToDisplay.sentEmailFetchedDone;\n\n  useEffect(() => {\n    if (dependencyArray.length > 0) {\n      dependencyArray.map((item) => {\n        var parsedMessage = parseMessage(item);\n        const condition = sentEmail.find((array) => array.id === item.id);\n        if (condition) {\n          return sentEmail;\n        } else {\n          const arr = {\n            id: parsedMessage.id,\n            to: parsedMessage.headers.to,\n            subject: parsedMessage.headers.subject,\n            description: parsedMessage.snippet,\n            timestamp: parsedMessage.headers.date,\n          };\n\n          return SetSentEmail((sentEmail) => [...sentEmail, arr]);\n        }\n      });\n    }\n  }, [dependencyArray]);\n\n  // useEffect(() => {\n  //   dispatch(sentEmailFetchedDone(sentEmail));\n  // }, [sentEmail]);\n\n  // useEffect(() => {\n  //   if (sentEmailFetched.length > 0) {\n  //     sentEmailFetched.map((item) => {\n  //       var parsedMessage = parseMessage(item);\n\n  //       const condition = sentEmail.find((array) => array.id === item.id);\n\n  //       if (condition) {\n  //         return sentEmail;\n  //       } else {\n  //         const arr = {\n  //           id: parsedMessage.id,\n  //           to: parsedMessage.headers.to,\n  //           subject: parsedMessage.headers.subject,\n  //           description: parsedMessage.snippet,\n  //           timestamp: parsedMessage.headers.date,\n  //         };\n\n  //         SetSentEmail((sentEmail) => [...sentEmail, arr]);\n  //         return;\n  //       }\n  //     });\n  //   }\n  // }, [sentEmailFetched]);\n\n  // useEffect(() => {\n  //   InboxIDs(user)\n  //     .get(`/${user.user_id}/messages?labelIds=SENT`)\n\n  //     .then(\n  //       function (response) {\n  //         response.data.messages.map(async (item) => {\n  //           await InboxIDs(user)\n  //             .get(`/${user.user_id}/messages/${item.id}`)\n  //             .then((res) => {\n  //               setSentEmailFetched((sentEmailFetched) => [\n  //                 ...sentEmailFetched,\n  //                 res.data,\n  //               ]);\n  //             })\n  //             .catch((error) => {\n  //               console.error(error);\n  //             });\n  //         });\n  //       },\n  //       function (err) {\n  //         console.error(\"Execute error\", err);\n  //       }\n  //     );\n  // }, [user]);\n\n  return (\n    <>\n      {\" \"}\n      <div className=\"emailList-sections\">\n        <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\n        <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\n        <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\n      </div>\n      <div className=\"emailList-list\">\n        {sentEmailsToDisplay.sentEmailFetchedDisplay &&\n          sentEmail.map(({ id, to, subject, description, timestamp }) => (\n            <SingleEmailDisplaySent\n              key={id}\n              id={id}\n              to={to}\n              subject={subject}\n              description={description}\n              timestamp={timestamp}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default SentEmails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}