{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/Gmail-Clone/src/components/EmailList/EmailList.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, IconButton } from \"@material-ui/core\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport \"./EmailList.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport Section from \"../Section/Section\";\nimport EmailRow from \"../EmailRow/EmailRow\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { APIUserData, userData, displayEmails, resetDisplayEmails } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InboxIDs from \"../../components/api/InboxList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmailList(_ref) {\n  _s();\n\n  var _data$data;\n\n  let {\n    emailGathered\n  } = _ref;\n  const [emailGatheredDestructurying, setEmailGatheredDestructurying] = useState([]);\n  const user = useSelector(selectUser);\n  const gh = useSelector(displayEmails);\n  console.log(\"ðŸš€ ~ file: EmailList.js ~ line 31 ~ EmailList ~ user\", gh);\n  const data = useSelector(APIUserData);\n  const dispatch = useDispatch();\n  const nextPageToken = (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.nextPageToken;\n  const [pretoken, setPreToken] = useState(null);\n  const [newEmailListIDs, setNewEmailListIDs] = useState([]);\n  const [newEmailGathered, setNewEmailGathered] = useState([]);\n  const Emails = useSelector(resetDisplayEmails);\n  useMemo(() => {\n    {\n      if (emailGathered) {\n        emailGathered.map(item => {\n          const id = item.id;\n          const message = item.snippet;\n          const to2 = item.payload.headers.find(header => {\n            if (header.name === \"From\") {\n              return header.value;\n            }\n          });\n          const subject2 = item.payload.headers.find(header => {\n            if (header.name === \"Subject\") {\n              return header.value;\n            }\n          });\n          const date2 = item.payload.headers.find(header => {\n            if (header.name === \"Date\") {\n              return header.value;\n            }\n          });\n          const arr = {\n            id,\n            data: {\n              to: to2.value,\n              subject: subject2.value,\n              description: message,\n              timestamp: date2.value\n            }\n          };\n\n          if (emailGatheredDestructurying.length === 0) {\n            setEmailGatheredDestructurying(pre => [...pre, arr]);\n          }\n\n          if (emailGatheredDestructurying.length > 0) {\n            const condition = emailGatheredDestructurying.find(x => x.id === arr.id);\n\n            if (condition) {\n              setEmailGatheredDestructurying(pre => [...pre]);\n            } else {\n              setEmailGatheredDestructurying(pre => [...pre, arr]);\n            }\n          }\n        });\n      }\n    }\n  }, [emailGathered]);\n\n  const nextPage = () => {\n    if (nextPageToken) {\n      console.log(\"Token Exists\");\n      InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=3&pageToken=${nextPageToken}`).then(res => {\n        console.log(\"ðŸš€ ~ file: EmailList.js ~ line 85 ~ .then ~ res\", res);\n        dispatch(userData(res.data));\n        setNewEmailListIDs(res.data.messages);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (newEmailListIDs.length > 0) {\n      newEmailListIDs.map(Emailid => InboxIDs(user).get(`/${user.user_id}/messages/${Emailid.id}`).then(res => {\n        const setting = res.data;\n        setNewEmailGathered(newEmailGathered => [...newEmailGathered, setting]);\n      }).catch(error => {\n        console.error(error);\n      }));\n      return () => console.log(\"my effect is destroying\");\n    }\n  }, [newEmailListIDs]);\n  useEffect(() => {\n    dispatch(resetDisplayEmails);\n    dispatch(displayEmails({\n      emailGathered: newEmailGathered\n    }));\n  }, [newEmailGathered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emailList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailList-settingsLeft\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(RedoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailList-settingsRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            console.log(\"Go to Previous Page\");\n          },\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            nextPage();\n            console.log(\"Go to Next Page\");\n          },\n          disabled: nextPageToken ? false : true,\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(KeyboardHideIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-sections\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        Icon: InboxIcon,\n        title: \"Primary\",\n        color: \"red\",\n        selected: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: PeopleIcon,\n        title: \"Social\",\n        color: \"#1A73E8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: LocalOfferIcon,\n        title: \"Promotions\",\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-list\",\n      children: emailGatheredDestructurying.map(_ref2 => {\n        let {\n          id,\n          data: {\n            to,\n            subject,\n            message,\n            timestamp\n          }\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(EmailRow, {\n          id: id,\n          title: to,\n          subject: subject,\n          description: message,\n          time: timestamp\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmailList, \"lCjZDXfqN4OlUMbEOyz8d+2v3d0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = EmailList;\nexport default EmailList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["Checkbox","IconButton","React","useState","useMemo","useEffect","ArrowDropDownIcon","MoreVertIcon","RedoIcon","ChevronLeftIcon","ChevronRightIcon","KeyboardHideIcon","SettingsIcon","InboxIcon","PeopleIcon","LocalOfferIcon","Section","EmailRow","selectUser","APIUserData","userData","displayEmails","resetDisplayEmails","useSelector","useDispatch","InboxIDs","EmailList","emailGathered","emailGatheredDestructurying","setEmailGatheredDestructurying","user","gh","console","log","data","dispatch","nextPageToken","pretoken","setPreToken","newEmailListIDs","setNewEmailListIDs","newEmailGathered","setNewEmailGathered","Emails","map","item","id","message","snippet","to2","payload","headers","find","header","name","value","subject2","date2","arr","to","subject","description","timestamp","length","pre","condition","x","nextPage","get","user_id","then","res","messages","catch","error","Emailid","setting"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/Gmail-Clone/src/components/EmailList/EmailList.js"],"sourcesContent":["import { Checkbox, IconButton } from \"@material-ui/core\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport \"./EmailList.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport Section from \"../Section/Section\";\nimport EmailRow from \"../EmailRow/EmailRow\";\nimport { selectUser } from \"../../features/userSlice\";\nimport {\n  APIUserData,\n  userData,\n  displayEmails,\n  resetDisplayEmails,\n} from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InboxIDs from \"../../components/api/InboxList\";\n\nfunction EmailList({ emailGathered }) {\n  const [emailGatheredDestructurying, setEmailGatheredDestructurying] =\n    useState([]);\n  const user = useSelector(selectUser);\n  const gh = useSelector(displayEmails);\n  console.log(\"ðŸš€ ~ file: EmailList.js ~ line 31 ~ EmailList ~ user\", gh);\n  const data = useSelector(APIUserData);\n  const dispatch = useDispatch();\n\n  const nextPageToken = data.data?.nextPageToken;\n\n  const [pretoken, setPreToken] = useState(null);\n  const [newEmailListIDs, setNewEmailListIDs] = useState([]);\n  const [newEmailGathered, setNewEmailGathered] = useState([]);\n\n  const Emails = useSelector(resetDisplayEmails);\n\n  useMemo(() => {\n    {\n      if (emailGathered) {\n        emailGathered.map((item) => {\n          const id = item.id;\n          const message = item.snippet;\n          const to2 = item.payload.headers.find((header) => {\n            if (header.name === \"From\") {\n              return header.value;\n            }\n          });\n          const subject2 = item.payload.headers.find((header) => {\n            if (header.name === \"Subject\") {\n              return header.value;\n            }\n          });\n          const date2 = item.payload.headers.find((header) => {\n            if (header.name === \"Date\") {\n              return header.value;\n            }\n          });\n\n          const arr = {\n            id,\n            data: {\n              to: to2.value,\n              subject: subject2.value,\n              description: message,\n              timestamp: date2.value,\n            },\n          };\n          if (emailGatheredDestructurying.length === 0) {\n            setEmailGatheredDestructurying((pre) => [...pre, arr]);\n          }\n          if (emailGatheredDestructurying.length > 0) {\n            const condition = emailGatheredDestructurying.find(\n              (x) => x.id === arr.id\n            );\n            if (condition) {\n              setEmailGatheredDestructurying((pre) => [...pre]);\n            } else {\n              setEmailGatheredDestructurying((pre) => [...pre, arr]);\n            }\n          }\n        });\n      }\n    }\n  }, [emailGathered]);\n\n  const nextPage = () => {\n    if (nextPageToken) {\n      console.log(\"Token Exists\");\n      InboxIDs(user)\n        .get(\n          `/${user.user_id}/messages?labelIds=INBOX&maxResults=3&pageToken=${nextPageToken}`\n        )\n        .then((res) => {\n          console.log(\"ðŸš€ ~ file: EmailList.js ~ line 85 ~ .then ~ res\", res);\n          dispatch(userData(res.data));\n          setNewEmailListIDs(res.data.messages);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n  useEffect(() => {\n    if (newEmailListIDs.length > 0) {\n      newEmailListIDs.map((Emailid) =>\n        InboxIDs(user)\n          .get(`/${user.user_id}/messages/${Emailid.id}`)\n          .then((res) => {\n            const setting = res.data;\n            setNewEmailGathered((newEmailGathered) => [\n              ...newEmailGathered,\n              setting,\n            ]);\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n      );\n\n      return () => console.log(\"my effect is destroying\");\n    }\n  }, [newEmailListIDs]);\n  useEffect(() => {\n    dispatch(resetDisplayEmails);\n    dispatch(displayEmails({ emailGathered: newEmailGathered }));\n  }, [newEmailGathered]);\n\n  return (\n    <div className=\"emailList\">\n      <div className=\"emailList-settings\">\n        <div className=\"emailList-settingsLeft\">\n          <Checkbox />\n          <IconButton>\n            <ArrowDropDownIcon />\n          </IconButton>\n          <IconButton>\n            <RedoIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n        <div className=\"emailList-settingsRight\">\n          <IconButton\n            onClick={() => {\n              console.log(\"Go to Previous Page\");\n            }}\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton\n            onClick={() => {\n              nextPage();\n              console.log(\"Go to Next Page\");\n            }}\n            disabled={nextPageToken ? false : true}\n          >\n            <ChevronRightIcon />\n          </IconButton>\n          <IconButton>\n            <KeyboardHideIcon />\n          </IconButton>\n          <IconButton>\n            <SettingsIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"emailList-sections\">\n        <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\n        <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\n        <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\n      </div>\n\n      <div className=\"emailList-list\">\n        {emailGatheredDestructurying.map(\n          ({ id, data: { to, subject, message, timestamp } }) => (\n            <EmailRow\n              id={id}\n              key={id}\n              title={to}\n              subject={subject}\n              description={message}\n              time={timestamp}\n            />\n          )\n        )}\n\n        {/* {emails.map(({ id, data: { to, subject, message, timestamp } }) => (\n          <EmailRow\n            id={id}\n            key={id}\n            title={to}\n            subject={subject}\n            description={message}\n            time={new Date(timestamp?.seconds * 1000).toUTCString()}\n          />\n        ))} */}\n        {/* <EmailRow\n          title=\"Twitch\"\n          subject=\"Hey fellow streamer!!\"\n          description=\"This is a DOPE\"\n          time=\"10pm\"\n        /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default EmailList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}