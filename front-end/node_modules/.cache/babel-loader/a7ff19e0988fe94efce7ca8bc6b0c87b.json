{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/EmailList/EmailList.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, IconButton } from \"@material-ui/core\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport \"./EmailList.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport Section from \"../Section/Section\";\nimport EmailRow from \"../EmailRow/EmailRow\";\nimport { selectUser } from \"../../features/userSlice\";\nimport { APIUserData, userData, displayEmails } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InboxIDs from \"../../components/api/InboxList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmailList(_ref) {\n  _s();\n\n  var _data$data;\n\n  let {\n    emailGathered\n  } = _ref;\n  const [emailGatheredDestructurying, setEmailGatheredDestructurying] = useState([]);\n  const user = useSelector(selectUser);\n  const data = useSelector(APIUserData);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  const [nextPageIcon, setNextPageIcon] = useState(false);\n  const [prevPageIcon, setPrevPageIcon] = useState(true);\n  var nextPageToken = (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.nextPageToken;\n  const [newEmailListIDs, setNewEmailListIDs] = useState([]);\n  const [newEmailGathered, setNewEmailGathered] = useState([]);\n  const [preArray, setPreArray] = useState([]);\n  useMemo(() => {\n    {\n      if (emailGathered) {\n        emailGathered.map(item => {\n          let getMessageBody = item => {\n            var encodedBody = \"\";\n\n            if (typeof item.payload.parts === \"undefined\") {\n              encodedBody = item.payload.body.data;\n            } else {\n              encodedBody = getHTMLPart(item.payload.parts);\n            }\n\n            return atob(encodedBody);\n          };\n\n          console.log(\"ðŸš€ ~ file: EmailList.js ~ line 59 ~ getMessageBody ~ getMessageBody\", getMessageBody(item));\n\n          const getHTMLPart = arr => {\n            console.log(\"ðŸš€ ~ file: EmailList.js ~ line 65 ~ getHTMLPart ~ arr\", arr);\n\n            for (var x = 0; x <= arr.length; x++) {\n              if (typeof arr[x].parts === \"undefined\") {\n                if (arr[x].mimeType === \"text/html\") {\n                  return arr[x].body.data;\n                }\n              } else {\n                return getHTMLPart(arr[x].parts);\n              }\n            }\n\n            return \"\";\n          }; // var part = item.payload.parts.filter(function (part) {\n          //   return part.mimeType == \"text/html\";\n          // });\n          // // var html = atob(part[0].body.data.replace(/_/g, '/').replace(/-/g, '+'));\n          // console.log(\n          //   \"ðŸš€ ~ file: EmailList.js ~ line 52 ~ emailGathered.map ~ html\",\n          //   part\n          // );\n\n\n          const id = item.id;\n          const message = item.snippet;\n          const to2 = item.payload.headers.find(header => {\n            if (header.name === \"From\") {\n              return header.value;\n            }\n          });\n          const subject2 = item.payload.headers.find(header => {\n            if (header.name === \"Subject\") {\n              return header.value;\n            }\n          });\n          const date2 = item.payload.headers.find(header => {\n            if (header.name === \"Date\") {\n              return header.value;\n            }\n          });\n          const unread2 = item.labelIds.indexOf(\"UNREAD\");\n          let label;\n\n          if (unread2 === -1) {\n            label = false;\n          } else label = true;\n\n          const arr = {\n            id,\n            data: {\n              to: to2.value,\n              subject: subject2.value,\n              description: message,\n              timestamp: date2.value\n            },\n            label\n          };\n\n          if (emailGatheredDestructurying.length === 0) {\n            setEmailGatheredDestructurying(pre => [...pre, arr]);\n          }\n\n          if (emailGatheredDestructurying.length > 0) {\n            const condition = emailGatheredDestructurying.find(x => x.id === arr.id);\n\n            if (condition) {\n              setEmailGatheredDestructurying(pre => [...pre]);\n            } else {\n              setEmailGatheredDestructurying(pre => [...pre, arr]);\n            }\n          }\n        });\n      }\n    }\n  }, [emailGathered]);\n\n  const nextPage = () => {\n    if (nextPageToken) {\n      InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${nextPageToken}`).then(res => {\n        var _res$data;\n\n        if (!res.data.nextPageToken) {\n          setNextPageIcon(true);\n        }\n\n        setPrevPageIcon(false);\n\n        if (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.resultSizeEstimate) > 0) {\n          setPreArray(pre => [...pre, nextPageToken]);\n          setEmailGatheredDestructurying([]);\n          dispatch(userData(res.data));\n          setNewEmailListIDs(res.data.messages);\n        } else setNextPageIcon(true);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  const prevPage = () => {\n    const preArraylength = preArray.length;\n\n    if (preArraylength > 0) {\n      const thisPageToken = preArray.pop(); //Just for next use\n\n      nextPageToken = preArray.pop();\n      prePageApIData(nextPageToken);\n      setNextPageIcon(false);\n    }\n\n    if (preArraylength === 0) {\n      setPrevPageIcon(true);\n      InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken`).then(res => {\n        var _res$data2;\n\n        // if (!res.data.nextPageToken) {\n        //   setNextPageIcon(true);\n        // }\n        if (((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.resultSizeEstimate) > 0) {\n          // setPreArray((pre) => [...pre, nextPageToken]);\n          setEmailGatheredDestructurying([]);\n          dispatch(userData(res.data));\n          setNewEmailListIDs(res.data.messages);\n        } //  else setNextPageIcon(true);\n\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  const prePageApIData = token => {\n    InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${token}`).then(res => {\n      var _res$data3;\n\n      if (((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.resultSizeEstimate) > 0) {\n        // setPreArray((pre) => [...pre, nextPageToken]);\n        setEmailGatheredDestructurying([]);\n        dispatch(userData(res.data));\n        setNewEmailListIDs(res.data.messages);\n      } //  else setNextPageIcon(true);\n\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    setNewEmailGathered([]);\n\n    if (newEmailListIDs.length > 0) {\n      newEmailListIDs.map(Emailid => InboxIDs(user).get(`/${user.user_id}/messages/${Emailid.id}`).then(res => {\n        const setting = res.data;\n        setNewEmailGathered(newEmailGathered => [...newEmailGathered, setting]);\n      }).catch(error => {\n        console.error(error);\n      }));\n      return () => {}; //console.log(\"my effect is destroying\")};\n    }\n  }, [newEmailListIDs]);\n  useEffect(() => {\n    if (load) {\n      const emailGathered = newEmailGathered;\n      dispatch(displayEmails({\n        emailGathered\n      }));\n    }\n  }, [newEmailGathered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emailList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailList-settingsLeft\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(RedoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailList-settingsRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            prevPage();\n            setLoad(true);\n          },\n          disabled: prevPageIcon,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            setLoad(true);\n            nextPage();\n          },\n          disabled: nextPageIcon,\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(KeyboardHideIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-sections\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        Icon: InboxIcon,\n        title: \"Primary\",\n        color: \"red\",\n        selected: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: PeopleIcon,\n        title: \"Social\",\n        color: \"#1A73E8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: LocalOfferIcon,\n        title: \"Promotions\",\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-list\",\n      children: emailGatheredDestructurying.map(_ref2 => {\n        let {\n          id,\n          data: {\n            to,\n            subject,\n            description,\n            timestamp\n          },\n          label\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(EmailRow, {\n          id: id,\n          title: to,\n          subject: subject,\n          description: description,\n          time: timestamp,\n          label: label\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmailList, \"H0s3aALzH8lFCMTQcvxldRSZ9gc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = EmailList;\nexport default EmailList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["Checkbox","IconButton","React","useState","useMemo","useEffect","ArrowDropDownIcon","MoreVertIcon","RedoIcon","ChevronLeftIcon","ChevronRightIcon","KeyboardHideIcon","SettingsIcon","InboxIcon","PeopleIcon","LocalOfferIcon","Section","EmailRow","selectUser","APIUserData","userData","displayEmails","useSelector","useDispatch","InboxIDs","EmailList","emailGathered","emailGatheredDestructurying","setEmailGatheredDestructurying","user","data","dispatch","load","setLoad","nextPageIcon","setNextPageIcon","prevPageIcon","setPrevPageIcon","nextPageToken","newEmailListIDs","setNewEmailListIDs","newEmailGathered","setNewEmailGathered","preArray","setPreArray","map","item","getMessageBody","encodedBody","payload","parts","body","getHTMLPart","atob","console","log","arr","x","length","mimeType","id","message","snippet","to2","headers","find","header","name","value","subject2","date2","unread2","labelIds","indexOf","label","to","subject","description","timestamp","pre","condition","nextPage","get","user_id","then","res","resultSizeEstimate","messages","catch","error","prevPage","preArraylength","thisPageToken","pop","prePageApIData","token","Emailid","setting"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/EmailList/EmailList.js"],"sourcesContent":["import { Checkbox, IconButton } from \"@material-ui/core\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport \"./EmailList.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport Section from \"../Section/Section\";\nimport EmailRow from \"../EmailRow/EmailRow\";\nimport { selectUser } from \"../../features/userSlice\";\n\nimport { APIUserData, userData, displayEmails } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InboxIDs from \"../../components/api/InboxList\";\n\nfunction EmailList({ emailGathered }) {\n  const [emailGatheredDestructurying, setEmailGatheredDestructurying] =\n    useState([]);\n\n  const user = useSelector(selectUser);\n  const data = useSelector(APIUserData);\n\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  const [nextPageIcon, setNextPageIcon] = useState(false);\n  const [prevPageIcon, setPrevPageIcon] = useState(true);\n\n  var nextPageToken = data.data?.nextPageToken;\n\n  const [newEmailListIDs, setNewEmailListIDs] = useState([]);\n  const [newEmailGathered, setNewEmailGathered] = useState([]);\n  const [preArray, setPreArray] = useState([]);\n\n  useMemo(() => {\n    {\n      if (emailGathered) {\n        emailGathered.map((item) => {\n          let getMessageBody = (item) => {\n            var encodedBody = \"\";\n            if (typeof item.payload.parts === \"undefined\") {\n              encodedBody = item.payload.body.data;\n            } else {\n              encodedBody = getHTMLPart(item.payload.parts);\n            }\n\n            return atob(encodedBody);\n          };\n          console.log(\n            \"ðŸš€ ~ file: EmailList.js ~ line 59 ~ getMessageBody ~ getMessageBody\",\n            getMessageBody(item)\n          );\n\n          const getHTMLPart = (arr) => {\n            console.log(\n              \"ðŸš€ ~ file: EmailList.js ~ line 65 ~ getHTMLPart ~ arr\",\n              arr\n            );\n            for (var x = 0; x <= arr.length; x++) {\n              if (typeof arr[x].parts === \"undefined\") {\n                if (arr[x].mimeType === \"text/html\") {\n                  return arr[x].body.data;\n                }\n              } else {\n                return getHTMLPart(arr[x].parts);\n              }\n            }\n            return \"\";\n          };\n\n          // var part = item.payload.parts.filter(function (part) {\n          //   return part.mimeType == \"text/html\";\n          // });\n          // // var html = atob(part[0].body.data.replace(/_/g, '/').replace(/-/g, '+'));\n          // console.log(\n          //   \"ðŸš€ ~ file: EmailList.js ~ line 52 ~ emailGathered.map ~ html\",\n          //   part\n          // );\n          const id = item.id;\n          const message = item.snippet;\n\n          const to2 = item.payload.headers.find((header) => {\n            if (header.name === \"From\") {\n              return header.value;\n            }\n          });\n          const subject2 = item.payload.headers.find((header) => {\n            if (header.name === \"Subject\") {\n              return header.value;\n            }\n          });\n          const date2 = item.payload.headers.find((header) => {\n            if (header.name === \"Date\") {\n              return header.value;\n            }\n          });\n          const unread2 = item.labelIds.indexOf(\"UNREAD\");\n          let label;\n          if (unread2 === -1) {\n            label = false;\n          } else label = true;\n          const arr = {\n            id,\n            data: {\n              to: to2.value,\n              subject: subject2.value,\n              description: message,\n              timestamp: date2.value,\n            },\n            label,\n          };\n          if (emailGatheredDestructurying.length === 0) {\n            setEmailGatheredDestructurying((pre) => [...pre, arr]);\n          }\n          if (emailGatheredDestructurying.length > 0) {\n            const condition = emailGatheredDestructurying.find(\n              (x) => x.id === arr.id\n            );\n            if (condition) {\n              setEmailGatheredDestructurying((pre) => [...pre]);\n            } else {\n              setEmailGatheredDestructurying((pre) => [...pre, arr]);\n            }\n          }\n        });\n      }\n    }\n  }, [emailGathered]);\n\n  const nextPage = () => {\n    if (nextPageToken) {\n      InboxIDs(user)\n        .get(\n          `/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${nextPageToken}`\n        )\n        .then((res) => {\n          if (!res.data.nextPageToken) {\n            setNextPageIcon(true);\n          }\n          setPrevPageIcon(false);\n\n          if (res.data?.resultSizeEstimate > 0) {\n            setPreArray((pre) => [...pre, nextPageToken]);\n            setEmailGatheredDestructurying([]);\n            dispatch(userData(res.data));\n            setNewEmailListIDs(res.data.messages);\n          } else setNextPageIcon(true);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  const prevPage = () => {\n    const preArraylength = preArray.length;\n\n    if (preArraylength > 0) {\n      const thisPageToken = preArray.pop(); //Just for next use\n      nextPageToken = preArray.pop();\n      prePageApIData(nextPageToken);\n      setNextPageIcon(false);\n    }\n    if (preArraylength === 0) {\n      setPrevPageIcon(true);\n      InboxIDs(user)\n        .get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken`)\n        .then((res) => {\n          // if (!res.data.nextPageToken) {\n          //   setNextPageIcon(true);\n          // }\n\n          if (res.data?.resultSizeEstimate > 0) {\n            // setPreArray((pre) => [...pre, nextPageToken]);\n            setEmailGatheredDestructurying([]);\n            dispatch(userData(res.data));\n            setNewEmailListIDs(res.data.messages);\n          }\n          //  else setNextPageIcon(true);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n  const prePageApIData = (token) => {\n    InboxIDs(user)\n      .get(\n        `/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${token}`\n      )\n      .then((res) => {\n        if (res.data?.resultSizeEstimate > 0) {\n          // setPreArray((pre) => [...pre, nextPageToken]);\n          setEmailGatheredDestructurying([]);\n          dispatch(userData(res.data));\n          setNewEmailListIDs(res.data.messages);\n        }\n        //  else setNextPageIcon(true);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  useEffect(() => {\n    setNewEmailGathered([]);\n    if (newEmailListIDs.length > 0) {\n      newEmailListIDs.map((Emailid) =>\n        InboxIDs(user)\n          .get(`/${user.user_id}/messages/${Emailid.id}`)\n          .then((res) => {\n            const setting = res.data;\n\n            setNewEmailGathered((newEmailGathered) => [\n              ...newEmailGathered,\n              setting,\n            ]);\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n      );\n\n      return () => {}; //console.log(\"my effect is destroying\")};\n    }\n  }, [newEmailListIDs]);\n  useEffect(() => {\n    if (load) {\n      const emailGathered = newEmailGathered;\n      dispatch(displayEmails({ emailGathered }));\n    }\n  }, [newEmailGathered]);\n\n  return (\n    <div className=\"emailList\">\n      <div className=\"emailList-settings\">\n        <div className=\"emailList-settingsLeft\">\n          <Checkbox />\n          <IconButton>\n            <ArrowDropDownIcon />\n          </IconButton>\n          <IconButton>\n            <RedoIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n        <div className=\"emailList-settingsRight\">\n          <IconButton\n            onClick={() => {\n              prevPage();\n              setLoad(true);\n            }}\n            disabled={prevPageIcon}\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton\n            onClick={() => {\n              setLoad(true);\n              nextPage();\n            }}\n            disabled={nextPageIcon}\n          >\n            <ChevronRightIcon />\n          </IconButton>\n          <IconButton>\n            <KeyboardHideIcon />\n          </IconButton>\n          <IconButton>\n            <SettingsIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"emailList-sections\">\n        <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\n        <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\n        <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\n      </div>\n\n      <div className=\"emailList-list\">\n        {emailGatheredDestructurying.map(\n          ({ id, data: { to, subject, description, timestamp }, label }) => (\n            <EmailRow\n              id={id}\n              key={id}\n              title={to}\n              subject={subject}\n              description={description}\n              time={timestamp}\n              label={label}\n            />\n          )\n        )}\n\n        {/* {emails.map(({ id, data: { to, subject, message, timestamp } }) => (\n          <EmailRow\n            id={id}\n            key={id}\n            title={to}\n            subject={subject}\n            description={message}\n            time={new Date(timestamp?.seconds * 1000).toUTCString()}\n          />\n        ))} */}\n        {/* <EmailRow\n          title=\"Twitch\"\n          subject=\"Hey fellow streamer!!\"\n          description=\"This is a DOPE\"\n          time=\"10pm\"\n        /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default EmailList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}