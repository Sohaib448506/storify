{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SendMail/SendMail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./SendMail.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeSendMessage } from \"../../features/mailSlice\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SendMail() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [imageEncode, setImageEncoded] = useState([]);\n\n  function sendMessage(headers_obj, message) {\n    var email = \"\";\n\n    for (var header in headers_obj) email += header += \": \" + headers_obj[header] + \"\\r\\n\";\n\n    email += \"\\r\\n\" + message;\n    const attachments = [{\n      filename: \"b2.png\",\n      path: \"/home/sohaib/Pictures/Screenshots\"\n    }];\n    email += \"\\r\\n\" + imageEncode;\n    var emailToSend = window.btoa(email).replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    axios.post(`https://gmail.googleapis.com/gmail/v1/users/${user.user_id}/messages/send`, {\n      raw: emailToSend\n    }, {\n      headers: {\n        \"Content-Type\": \"message/rfc822\",\n        Authorization: `Bearer ${user.access_token}`\n      }\n    }).then(res => console.log(res)).catch(err => console.log(err)); // window.gapi.client.gmail.users.messages\n    //   .send({\n    //     userId: \"me\",\n    //     resource: {\n    //       raw:\n    //         window.btoa(email).replace(/\\+/g, \"-\").replace(/\\//g, \"_\") +\n    //         imageEncode,\n    //     },\n    //   })\n    //   .then((res) => console.log(\"Message has been Sent Successfully\", res))\n    //   .catch((err) => console.log(err));\n  }\n\n  const onSubmit = formData => {\n    const headers_obj = {\n      To: formData.to,\n      Subject: formData.subject\n    };\n    const message = formData.message;\n    sendMessage(headers_obj, message);\n    dispatch(closeSendMessage());\n  }; //for attachments\n\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const uploadImage = async event => {\n    const file = event.target.files[0];\n    const base64 = await convertBase64(file);\n    setImageEncoded(base64.split(\",\")[1]);\n  }; //testing\n  // Get the canvas from the DOM and turn it into base64-encoded png data.\n  // var canvas = document.getElementById(\"canvas\");\n  // var dataUrl = canvas.toDataURL();\n  // The relevant data is after 'base64,'.\n\n\n  var pngData = imageEncode;\n  var mail = ['Content-Type: multipart/mixed; boundary=\"foo_bar_baz\"\\r\\n', \"MIME-Version: 1.0\\r\\n\", \"From: sender@gmail.com\\r\\n\", \"To: receiver@gmail.com\\r\\n\", \"Subject: Subject Text\\r\\n\\r\\n\", \"--foo_bar_baz\\r\\n\", 'Content-Type: text/plain; charset=\"UTF-8\"\\r\\n', \"MIME-Version: 1.0\\r\\n\", \"Content-Transfer-Encoding: 7bit\\r\\n\\r\\n\", \"The actual message text goes here\\r\\n\\r\\n\", \"--foo_bar_baz\\r\\n\", \"Content-Type: image/png\\r\\n\", \"MIME-Version: 1.0\\r\\n\", \"Content-Transfer-Encoding: base64\\r\\n\", 'Content-Disposition: attachment; filename=\"example.png\"\\r\\n\\r\\n', pngData, \"\\r\\n\\r\\n\", \"--foo_bar_baz--\"].join(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sendMail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendMail-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: () => dispatch(closeSendMessage()),\n        className: \"sendMail-close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"to\",\n        placeholder: \"To\",\n        type: \"email\",\n        ...register(\"to\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), errors.to && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sendMail-error\",\n        children: \"To is Required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"subject\",\n        placeholder: \"Subject\",\n        type: \"text\",\n        ...register(\"subject\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sendMail-error\",\n        children: \"Subject is Required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        placeholder: \"Message\",\n        type: \"text\",\n        className: \"sendMail-message\",\n        ...register(\"message\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sendMail-error\",\n        children: \"Message is Required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"selectImage\",\n        type: \"file\",\n        onChange: e => {\n          uploadImage(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sendMail-options\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"sendMail-send\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SendMail, \"PKyfQT6P/PiEO8pqqxOGQHdUu0Y=\", false, function () {\n  return [useForm, useSelector, useDispatch];\n});\n\n_c = SendMail;\nexport default SendMail;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMail\");","map":{"version":3,"names":["React","useState","CloseIcon","Button","useForm","useDispatch","closeSendMessage","useSelector","selectUser","axios","SendMail","register","handleSubmit","formState","errors","user","dispatch","imageEncode","setImageEncoded","sendMessage","headers_obj","message","email","header","attachments","filename","path","emailToSend","window","btoa","replace","post","user_id","raw","headers","Authorization","access_token","then","res","console","log","catch","err","onSubmit","formData","To","to","Subject","subject","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","uploadImage","event","target","files","base64","split","pngData","mail","join","required","e"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/SendMail/SendMail.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./SendMail.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeSendMessage } from \"../../features/mailSlice\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport axios from \"axios\";\n\nfunction SendMail() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [imageEncode, setImageEncoded] = useState([]);\n  function sendMessage(headers_obj, message) {\n    var email = \"\";\n\n    for (var header in headers_obj)\n      email += header += \": \" + headers_obj[header] + \"\\r\\n\";\n\n    email += \"\\r\\n\" + message;\n    const attachments = [\n      {\n        filename: \"b2.png\",\n        path: \"/home/sohaib/Pictures/Screenshots\",\n      },\n    ];\n\n    email += \"\\r\\n\" + imageEncode;\n    var emailToSend = window\n      .btoa(email)\n      .replace(/\\+/g, \"-\")\n      .replace(/\\//g, \"_\");\n\n    axios\n      .post(\n        `https://gmail.googleapis.com/gmail/v1/users/${user.user_id}/messages/send`,\n        {\n          raw: emailToSend,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"message/rfc822\",\n            Authorization: `Bearer ${user.access_token}`,\n          },\n        }\n      )\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n    // window.gapi.client.gmail.users.messages\n    //   .send({\n    //     userId: \"me\",\n    //     resource: {\n    //       raw:\n    //         window.btoa(email).replace(/\\+/g, \"-\").replace(/\\//g, \"_\") +\n    //         imageEncode,\n    //     },\n    //   })\n    //   .then((res) => console.log(\"Message has been Sent Successfully\", res))\n    //   .catch((err) => console.log(err));\n  }\n  const onSubmit = (formData) => {\n    const headers_obj = {\n      To: formData.to,\n      Subject: formData.subject,\n    };\n    const message = formData.message;\n    sendMessage(headers_obj, message);\n\n    dispatch(closeSendMessage());\n  };\n  //for attachments\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  const uploadImage = async (event) => {\n    const file = event.target.files[0];\n\n    const base64 = await convertBase64(file);\n\n    setImageEncoded(base64.split(\",\")[1]);\n  };\n\n  //testing\n  // Get the canvas from the DOM and turn it into base64-encoded png data.\n  // var canvas = document.getElementById(\"canvas\");\n  // var dataUrl = canvas.toDataURL();\n\n  // The relevant data is after 'base64,'.\n  var pngData = imageEncode;\n  var mail = [\n    'Content-Type: multipart/mixed; boundary=\"foo_bar_baz\"\\r\\n',\n    \"MIME-Version: 1.0\\r\\n\",\n    \"From: sender@gmail.com\\r\\n\",\n    \"To: receiver@gmail.com\\r\\n\",\n    \"Subject: Subject Text\\r\\n\\r\\n\",\n\n    \"--foo_bar_baz\\r\\n\",\n    'Content-Type: text/plain; charset=\"UTF-8\"\\r\\n',\n    \"MIME-Version: 1.0\\r\\n\",\n    \"Content-Transfer-Encoding: 7bit\\r\\n\\r\\n\",\n\n    \"The actual message text goes here\\r\\n\\r\\n\",\n\n    \"--foo_bar_baz\\r\\n\",\n    \"Content-Type: image/png\\r\\n\",\n    \"MIME-Version: 1.0\\r\\n\",\n    \"Content-Transfer-Encoding: base64\\r\\n\",\n    'Content-Disposition: attachment; filename=\"example.png\"\\r\\n\\r\\n',\n\n    pngData,\n    \"\\r\\n\\r\\n\",\n\n    \"--foo_bar_baz--\",\n  ].join(\"\");\n\n  return (\n    <div className=\"sendMail\">\n      <div className=\"sendMail-header\">\n        <h3>New Message</h3>\n        <CloseIcon\n          onClick={() => dispatch(closeSendMessage())}\n          className=\"sendMail-close\"\n        />\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          name=\"to\"\n          placeholder=\"To\"\n          type=\"email\"\n          {...register(\"to\", { required: true })}\n        />\n        {errors.to && <p className=\"sendMail-error\">To is Required!</p>}\n        <input\n          name=\"subject\"\n          placeholder=\"Subject\"\n          type=\"text\"\n          {...register(\"subject\", { required: true })}\n        />\n        {errors.subject && (\n          <p className=\"sendMail-error\">Subject is Required!</p>\n        )}\n        <input\n          name=\"message\"\n          placeholder=\"Message\"\n          type=\"text\"\n          className=\"sendMail-message\"\n          {...register(\"message\", { required: true })}\n        />\n        {errors.message && (\n          <p className=\"sendMail-error\">Message is Required!</p>\n        )}\n        {/* For Uploading documents */}\n        <input\n          id=\"selectImage\"\n          type=\"file\"\n          onChange={(e) => {\n            uploadImage(e);\n          }}\n        />\n        <div className=\"sendMail-options\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"sendMail-send\"\n          >\n            Send\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SendMail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}