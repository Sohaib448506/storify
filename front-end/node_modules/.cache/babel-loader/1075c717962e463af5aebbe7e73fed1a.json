{"ast":null,"code":"var _jsxFileName = \"/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/EmailList/EmailList.js\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, IconButton } from \"@material-ui/core\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport \"./EmailList.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport Section from \"../Section/Section\";\nimport EmailRow from \"../EmailRow/EmailRow\";\nimport { selectUser } from \"../../features/userSlice\";\nimport parseMessage from \"gmail-api-parse-message\";\nimport { APIUserData, userData, displayEmails } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InboxIDs from \"../../components/api/InboxList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmailList() {\n  _s();\n\n  var _data$data;\n\n  const [emailGatheredDestructurying, setEmailGatheredDestructurying] = useState([]);\n  const user = useSelector(selectUser);\n  const data = useSelector(APIUserData);\n  const emailGathered = data.emailData.emailGathered;\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  const [nextPageIcon, setNextPageIcon] = useState(false);\n  const [prevPageIcon, setPrevPageIcon] = useState(true);\n  const [resultLoaded, setResultLoaded] = useState(2);\n  const totalMessagesOfInbox = data.profiletotalInboxMessages;\n  const [nextPageToken, setNextPageToken] = useState((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.nextPageToken);\n  const [newEmailListIDs, setNewEmailListIDs] = useState([]);\n  const [newEmailGathered, setNewEmailGathered] = useState([]);\n  const [preArray, setPreArray] = useState([]);\n  useMemo(() => {\n    {\n      if (emailGathered) {\n        emailGathered.map(item => {\n          var parsedMessage = parseMessage(item); //To get the attachments, HTML and Plain TExt of the body\n\n          if (parsedMessage.attachments) {\n            const attachments = parsedMessage.attachments;\n            var attachmentId;\n\n            if (attachments.length > 1) {\n              let array = [];\n              const gathered = attachments.map(x => {\n                array = [...array, x.attachmentId];\n                return array;\n              });\n              attachmentId = gathered;\n            } else attachmentId = parsedMessage.attachments[0].attachmentId;\n          } else {\n            var attachmentId = \"\";\n          }\n\n          const textHTML = parsedMessage.textHtml;\n          const id = item.id;\n          const message = item.snippet;\n          const to2 = item.payload.headers.find(header => {\n            if (header.name === \"From\") {\n              return header.value;\n            }\n          });\n          const subject2 = item.payload.headers.find(header => {\n            if (header.name === \"Subject\") {\n              if (header.value.length > 0) return header.value;else return \"Subject is not defined\";\n            }\n          });\n          const date2 = item.payload.headers.find(header => {\n            if (header.name === \"Date\") {\n              return header.value;\n            }\n          });\n          const unread2 = item.labelIds.indexOf(\"UNREAD\");\n          let label;\n\n          if (unread2 === -1) {\n            label = false;\n          } else label = true;\n\n          const arr = {\n            id,\n            data: {\n              to: to2.value,\n              subject: subject2.value,\n              description: message,\n              timestamp: date2.value\n            },\n            label,\n            attachmentId,\n            textHTML\n          };\n\n          if (emailGatheredDestructurying.length === 0) {\n            setEmailGatheredDestructurying(pre => [...pre, arr]);\n          }\n\n          if (emailGatheredDestructurying.length > 0) {\n            const condition = emailGatheredDestructurying.find(x => x.id === arr.id);\n\n            if (condition) {\n              setEmailGatheredDestructurying(pre => [...pre]);\n            } else {\n              setEmailGatheredDestructurying(pre => [...pre, arr]);\n            }\n          }\n        });\n      }\n    }\n  }, [emailGathered]);\n\n  const nextPage = () => {\n    if (resultLoaded <= totalMessagesOfInbox) {\n      setResultLoaded(x => x + 2);\n      InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${nextPageToken}&q=category%3Aprimary`).then(res => {\n        var _res$data;\n\n        // if (!res.data.nextPageToken) {\n        //   setNextPageIcon(true);\n        // }\n        // setPrevPageIcon(false);\n        if (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.resultSizeEstimate) > 0) {\n          setPreArray(pre => [...pre, nextPageToken]);\n          setEmailGatheredDestructurying([]);\n          dispatch(userData(res.data));\n          setNewEmailListIDs(res.data.messages);\n        } // else setNextPageIcon(true);\n\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  useEffect(() => {\n    const difference = totalMessagesOfInbox - 2 - resultLoaded;\n\n    if (difference < 1) {\n      setNextPageIcon(true);\n    } else setNextPageIcon(false);\n  }, [resultLoaded]);\n\n  const prevPage = () => {\n    const preArraylength = preArray.length;\n\n    if (preArraylength > 0) {\n      const thisPageToken = preArray.pop(); //Just for next use\n\n      nextPageToken = preArray.pop();\n      prePageApIData(nextPageToken);\n    }\n\n    if (preArraylength === 0) {\n      setPrevPageIcon(true);\n      InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken`).then(res => {\n        var _res$data2;\n\n        // if (!res.data.nextPageToken) {\n        //   setNextPageIcon(true);\n        // }\n        if (((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.resultSizeEstimate) > 0) {\n          // setPreArray((pre) => [...pre, nextPageToken]);\n          setEmailGatheredDestructurying([]);\n          dispatch(userData(res.data));\n          setNewEmailListIDs(res.data.messages);\n        } //  else setNextPageIcon(true);\n\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  const prePageApIData = token => {\n    InboxIDs(user).get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${token}&q=category%3Aprimary`).then(res => {\n      var _res$data3;\n\n      if (((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.resultSizeEstimate) > 0) {\n        // setPreArray((pre) => [...pre, nextPageToken]);\n        setEmailGatheredDestructurying([]);\n        dispatch(userData(res.data));\n        setNewEmailListIDs(res.data.messages);\n      } //  else setNextPageIcon(true);\n\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    setNewEmailGathered([]);\n\n    if (newEmailListIDs.length > 0) {\n      newEmailListIDs.map(Emailid => InboxIDs(user).get(`/${user.user_id}/messages/${Emailid.id}`).then(res => {\n        const setting = res.data;\n        setNewEmailGathered(newEmailGathered => [...newEmailGathered, setting]);\n      }).catch(error => {\n        console.error(error);\n      }));\n      return () => {}; //console.log(\"my effect is destroying\")};\n    }\n  }, [newEmailListIDs]);\n  useEffect(() => {\n    if (load) {\n      const emailGathered = newEmailGathered;\n      dispatch(displayEmails({\n        emailGathered\n      }));\n    }\n  }, [newEmailGathered]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emailList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailList-settingsLeft\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(RedoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emailList-settingsRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            prevPage();\n            setLoad(true);\n          },\n          disabled: prevPageIcon,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => {\n            setLoad(true);\n            nextPage();\n          },\n          disabled: nextPageIcon,\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(KeyboardHideIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-sections\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        Icon: InboxIcon,\n        title: \"Primary\",\n        color: \"red\",\n        selected: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: PeopleIcon,\n        title: \"Social\",\n        color: \"#1A73E8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        Icon: LocalOfferIcon,\n        title: \"Promotions\",\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emailList-list\",\n      children: emailGatheredDestructurying.map(_ref => {\n        let {\n          id,\n          data: {\n            to,\n            subject,\n            description,\n            timestamp\n          },\n          label,\n          attachmentId,\n          textHTML\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(EmailRow, {\n          id: id,\n          title: to,\n          subject: subject,\n          description: description,\n          time: timestamp,\n          label: label,\n          attachmentId: attachmentId,\n          textHTML: textHTML\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmailList, \"h4nT2N4iTBnBNyoruxt46H+1gDQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = EmailList;\nexport default EmailList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["Checkbox","IconButton","React","useState","useMemo","useEffect","ArrowDropDownIcon","MoreVertIcon","RedoIcon","ChevronLeftIcon","ChevronRightIcon","KeyboardHideIcon","SettingsIcon","InboxIcon","PeopleIcon","LocalOfferIcon","Section","EmailRow","selectUser","parseMessage","APIUserData","userData","displayEmails","useSelector","useDispatch","InboxIDs","EmailList","emailGatheredDestructurying","setEmailGatheredDestructurying","user","data","emailGathered","emailData","dispatch","load","setLoad","nextPageIcon","setNextPageIcon","prevPageIcon","setPrevPageIcon","resultLoaded","setResultLoaded","totalMessagesOfInbox","profiletotalInboxMessages","nextPageToken","setNextPageToken","newEmailListIDs","setNewEmailListIDs","newEmailGathered","setNewEmailGathered","preArray","setPreArray","map","item","parsedMessage","attachments","attachmentId","length","array","gathered","x","textHTML","textHtml","id","message","snippet","to2","payload","headers","find","header","name","value","subject2","date2","unread2","labelIds","indexOf","label","arr","to","subject","description","timestamp","pre","condition","nextPage","get","user_id","then","res","resultSizeEstimate","messages","catch","error","console","difference","prevPage","preArraylength","thisPageToken","pop","prePageApIData","token","Emailid","setting"],"sources":["/home/sohaib/Desktop/MERN/Evaluation/GMAIL OAUTH/src/components/EmailList/EmailList.js"],"sourcesContent":["import { Checkbox, IconButton } from \"@material-ui/core\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport \"./EmailList.css\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport Section from \"../Section/Section\";\nimport EmailRow from \"../EmailRow/EmailRow\";\nimport { selectUser } from \"../../features/userSlice\";\nimport parseMessage from \"gmail-api-parse-message\";\n\nimport { APIUserData, userData, displayEmails } from \"../../features/dataSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InboxIDs from \"../../components/api/InboxList\";\n\nfunction EmailList() {\n  const [emailGatheredDestructurying, setEmailGatheredDestructurying] =\n    useState([]);\n\n  const user = useSelector(selectUser);\n  const data = useSelector(APIUserData);\n\n  const emailGathered = data.emailData.emailGathered;\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  const [nextPageIcon, setNextPageIcon] = useState(false);\n\n  const [prevPageIcon, setPrevPageIcon] = useState(true);\n  const [resultLoaded, setResultLoaded] = useState(2);\n\n  const totalMessagesOfInbox = data.profiletotalInboxMessages;\n  const [nextPageToken, setNextPageToken] = useState(data.data?.nextPageToken);\n\n  const [newEmailListIDs, setNewEmailListIDs] = useState([]);\n  const [newEmailGathered, setNewEmailGathered] = useState([]);\n  const [preArray, setPreArray] = useState([]);\n\n  useMemo(() => {\n    {\n      if (emailGathered) {\n        emailGathered.map((item) => {\n          var parsedMessage = parseMessage(item); //To get the attachments, HTML and Plain TExt of the body\n\n          if (parsedMessage.attachments) {\n            const attachments = parsedMessage.attachments;\n            var attachmentId;\n            if (attachments.length > 1) {\n              let array = [];\n              const gathered = attachments.map((x) => {\n                array = [...array, x.attachmentId];\n                return array;\n              });\n              attachmentId = gathered;\n            } else attachmentId = parsedMessage.attachments[0].attachmentId;\n          } else {\n            var attachmentId = \"\";\n          }\n\n          const textHTML = parsedMessage.textHtml;\n\n          const id = item.id;\n          const message = item.snippet;\n\n          const to2 = item.payload.headers.find((header) => {\n            if (header.name === \"From\") {\n              return header.value;\n            }\n          });\n          const subject2 = item.payload.headers.find((header) => {\n            if (header.name === \"Subject\") {\n              if (header.value.length > 0) return header.value;\n              else return \"Subject is not defined\";\n            }\n          });\n\n          const date2 = item.payload.headers.find((header) => {\n            if (header.name === \"Date\") {\n              return header.value;\n            }\n          });\n          const unread2 = item.labelIds.indexOf(\"UNREAD\");\n          let label;\n          if (unread2 === -1) {\n            label = false;\n          } else label = true;\n          const arr = {\n            id,\n            data: {\n              to: to2.value,\n              subject: subject2.value,\n              description: message,\n              timestamp: date2.value,\n            },\n            label,\n            attachmentId,\n            textHTML,\n          };\n          if (emailGatheredDestructurying.length === 0) {\n            setEmailGatheredDestructurying((pre) => [...pre, arr]);\n          }\n          if (emailGatheredDestructurying.length > 0) {\n            const condition = emailGatheredDestructurying.find(\n              (x) => x.id === arr.id\n            );\n            if (condition) {\n              setEmailGatheredDestructurying((pre) => [...pre]);\n            } else {\n              setEmailGatheredDestructurying((pre) => [...pre, arr]);\n            }\n          }\n        });\n      }\n    }\n  }, [emailGathered]);\n\n  const nextPage = () => {\n    if (resultLoaded <= totalMessagesOfInbox) {\n      setResultLoaded((x) => x + 2);\n\n      InboxIDs(user)\n        .get(\n          `/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${nextPageToken}&q=category%3Aprimary`\n        )\n        .then((res) => {\n          // if (!res.data.nextPageToken) {\n          //   setNextPageIcon(true);\n          // }\n          // setPrevPageIcon(false);\n\n          if (res.data?.resultSizeEstimate > 0) {\n            setPreArray((pre) => [...pre, nextPageToken]);\n            setEmailGatheredDestructurying([]);\n            dispatch(userData(res.data));\n            setNewEmailListIDs(res.data.messages);\n          }\n          // else setNextPageIcon(true);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n  useEffect(() => {\n    const difference = totalMessagesOfInbox - 2 - resultLoaded;\n\n    if (difference < 1) {\n      setNextPageIcon(true);\n    } else setNextPageIcon(false);\n  }, [resultLoaded]);\n  const prevPage = () => {\n    const preArraylength = preArray.length;\n\n    if (preArraylength > 0) {\n      const thisPageToken = preArray.pop(); //Just for next use\n      nextPageToken = preArray.pop();\n      prePageApIData(nextPageToken);\n    }\n    if (preArraylength === 0) {\n      setPrevPageIcon(true);\n      InboxIDs(user)\n        .get(`/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken`)\n        .then((res) => {\n          // if (!res.data.nextPageToken) {\n          //   setNextPageIcon(true);\n          // }\n\n          if (res.data?.resultSizeEstimate > 0) {\n            // setPreArray((pre) => [...pre, nextPageToken]);\n            setEmailGatheredDestructurying([]);\n            dispatch(userData(res.data));\n            setNewEmailListIDs(res.data.messages);\n          }\n          //  else setNextPageIcon(true);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n  const prePageApIData = (token) => {\n    InboxIDs(user)\n      .get(\n        `/${user.user_id}/messages?labelIds=INBOX&maxResults=2&pageToken=${token}&q=category%3Aprimary`\n      )\n      .then((res) => {\n        if (res.data?.resultSizeEstimate > 0) {\n          // setPreArray((pre) => [...pre, nextPageToken]);\n          setEmailGatheredDestructurying([]);\n          dispatch(userData(res.data));\n          setNewEmailListIDs(res.data.messages);\n        }\n        //  else setNextPageIcon(true);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  useEffect(() => {\n    setNewEmailGathered([]);\n    if (newEmailListIDs.length > 0) {\n      newEmailListIDs.map((Emailid) =>\n        InboxIDs(user)\n          .get(`/${user.user_id}/messages/${Emailid.id}`)\n          .then((res) => {\n            const setting = res.data;\n\n            setNewEmailGathered((newEmailGathered) => [\n              ...newEmailGathered,\n              setting,\n            ]);\n          })\n          .catch((error) => {\n            console.error(error);\n          })\n      );\n\n      return () => {}; //console.log(\"my effect is destroying\")};\n    }\n  }, [newEmailListIDs]);\n  useEffect(() => {\n    if (load) {\n      const emailGathered = newEmailGathered;\n      dispatch(displayEmails({ emailGathered }));\n    }\n  }, [newEmailGathered]);\n\n  return (\n    <div className=\"emailList\">\n      <div className=\"emailList-settings\">\n        <div className=\"emailList-settingsLeft\">\n          <Checkbox />\n          <IconButton>\n            <ArrowDropDownIcon />\n          </IconButton>\n          <IconButton>\n            <RedoIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n        <div className=\"emailList-settingsRight\">\n          <IconButton\n            onClick={() => {\n              prevPage();\n              setLoad(true);\n            }}\n            disabled={prevPageIcon}\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton\n            onClick={() => {\n              setLoad(true);\n              nextPage();\n            }}\n            disabled={nextPageIcon}\n          >\n            <ChevronRightIcon />\n          </IconButton>\n          <IconButton>\n            <KeyboardHideIcon />\n          </IconButton>\n          <IconButton>\n            <SettingsIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"emailList-sections\">\n        <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\n        <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\n        <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\n      </div>\n\n      <div className=\"emailList-list\">\n        {emailGatheredDestructurying.map(\n          ({\n            id,\n            data: { to, subject, description, timestamp },\n            label,\n            attachmentId,\n            textHTML,\n          }) => (\n            <EmailRow\n              id={id}\n              key={id}\n              title={to}\n              subject={subject}\n              description={description}\n              time={timestamp}\n              label={label}\n              attachmentId={attachmentId}\n              textHTML={textHTML}\n            />\n          )\n        )}\n\n        {/* {emails.map(({ id, data: { to, subject, message, timestamp } }) => (\n          <EmailRow\n            id={id}\n            key={id}\n            title={to}\n            subject={subject}\n            description={message}\n            time={new Date(timestamp?.seconds * 1000).toUTCString()}\n          />\n        ))} */}\n        {/* <EmailRow\n          title=\"Twitch\"\n          subject=\"Hey fellow streamer!!\"\n          description=\"This is a DOPE\"\n          time=\"10pm\"\n        /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default EmailList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}